<link phx-track-static rel="stylesheet" />
<div class="mt-10 loading-blocking" id="loading" hidden>
  <span
    class="group relative rounded-2xl px-6 py-4 text-sm font-semibold leading-6 text-zinc-900"
  >
    Processing ...
  </span>
</div>

<.flash_group flash={@flash} />

<div class="grid sm:grid-cols-1 md:grid-cols-2 main">
  <div class="py-[4rem] content-left">
    <div class="flex header flex-col lg:flex-row lg:px-[10rem]">
      <img class="flip-horizontally" src={~p"/images/logo.jpg"} alt="logo"
      id="logo">

      <h1
        class="ml-0 mt-5 lg:mt-0 lg:ml-5 text-brand header-title text-sm font-semibold leading-6"
      >
        Fedi-bot Chan
      </h1>
    </div>
    <div class="grid grid-cols-1">
      <div class="w-full sm:w-100 lg:px-[10rem]">
        <form id="url-form">
          <div
            class="mt-10 grid grid-rows-1 gap-x-6 gap-y-4 sm:grid-rows-2 mx-4"
            id="setup_cta"
          >
            <div class="mt-10">
              <input
                placeholder="Enter fediverse URL..."
                class="group relative rounded-2xl py-4 px-4 text-sm font-semibold leading-6 text-zinc-900 border-2 w-full"
                required
                title="https://domain.tld"
                style="width: 100%"
                id="fedi_url_here"
                pattern="[Hh][Tt][Tt][Pp][Ss]?:\/\/(?:(?:[a-zA-Z\u00a1-\uffff0-9]+-?)*[a-zA-Z\u00a1-\uffff0-9]+)(?:\.(?:[a-zA-Z\u00a1-\uffff0-9]+-?)*[a-zA-Z\u00a1-\uffff0-9]+)*(?:\.(?:[a-zA-Z\u00a1-\uffff]{2,}))(?::\d{2,5})?(?:\/[^\s]*)?"
              />
            </div>
            <button
              class="group relative rounded-2xl px-6 py-4 text-sm font-semibold leading-6 text-zinc-900 sm:py-6"
            >
              <span
                class="absolute inset-0 rounded-2xl bg-zinc-50 transition group-hover:bg-zinc-100 sm:group-hover:scale-105"
              >
              </span>
              <span
                class="relative flex items-center gap-4 sm:flex-col"
                style="text-align: center"
              >
                <div>🤖</div>
                Click here to setup your bot!
              </span>
            </button>
          </div>
        </form>
      </div>
      <div class="flex flex-col items-center" >
        <div class="mt-10" id="instructions" hidden>
          <span
            class="group relative rounded-2xl px-6 py-4 text-sm font-semibold leading-6 text-zinc-900"
          >
            Connect to your fedi account
          </span>
        </div>
          <a href="#" target="_blank" id="url_here"  class="mt-10" hidden>
            <button
              type="button"
              style="
                border: 1px solid orange;
                border-radius: 10px;
                padding: 1rem;
                color: #fd4f00;
              "
            >
              Connect bot to your fedi account
            </button>
          </a>
        <div class="mt-10 text-center" id="more_instructions" hidden>
          <span
            class="group relative py-4 text-sm font-semibold leading-6 text-zinc-900 text-center"
          >
            Enter the received code <br>And press <code>Enter</code>
          </span>
        </div>
        <div class="mt-10">
          <input
            placeholder="Code here... "
            onkeyup="connectAccount(event)"
            class="group relative rounded-2xl px-6 py-4 text-sm font-semibold leading-6 text-zinc-900 border-2"
            id="paste_code_here"
            hidden
          />
        </div>
        <div
          class="w-full px-4 max-w-sm margin-auto text-center"
          id="success_and_post"
          hidden
        >
          <p>🤖💬</p>
          <h1 class="text-brand text-sm font-semibold leading-6">
            Fedi-bot chan at your service!
          </h1>
          <div class="mt-10">
            <span
              class="group relative rounded-2xl px-6 py-4 text-sm font-semibold leading-6 text-zinc-900 mt-10"
            >
              Post your bot message:
            </span>
          </div>
          <div class="mt-10 flex flex-col">
            <textarea
              placeholder="Enter message here... "
              onkeydown="post_message(event)"
              class="group relative rounded-2xl px-6 py-4 text-sm font-semibold leading-6 text-zinc-900"
              id="message_here"
              maxlength="500"
            >
            </textarea>
            <label for="message_here" class="w-full text-center mt-2 text-zinc-500 text-sm">max. 500 characters</label>
            <input
              placeholder="Enter image url here... "
              onkeydown="post_message(event)"
              class="group relative rounded-2xl px-6 py-4 text-sm font-semibold leading-6 text-zinc-900 border-solid border-2 mt-4"
              id="img_url_here"
            />
            <label for="img_url_here" class="w-full text-center mt-2 text-zinc-500 text-sm">max. 2Mb</label>
          </div>
          <button
            class="bg-brand/5 text-brand rounded-full px-4 py-4 font-medium leading-6 mt-10"
            onclick="post_message()"
          >
          <.icon name="hero-paper-airplane-solid" /> Post!
          </button>
          <button
            class="text-brand px-4 py-4 font-medium leading-6 mt-10 border-solid"
            title="Preview in mastodon style UI"
            onclick="preview_toot()"
          >
            Preview
          </button>
        </div>
        <iframe
          id="iframed_toot"
          src="#"
          frameborder="0"
          class="w-full h-[80vh] mt-10"
        ></iframe>
        <div class="px-4 lg:px-20">
          <hr class="mb-10 mt-10" />
          <button
            class="text-brand rounded-full px-4 py-4 font-medium leading-6 w-full"
            onclick="clearBotCredentials()"
          >
            <.icon name="hero-trash-solid" /> Clear bot credentials
          </button>
        </div>
      </div>
    </div>
  </div>

  <div class="banner-right hidden sm:hidden md:block">
    <img class="center-cropped-img" src={~p"/images/banner-right.png"}
    alt="banner">
  </div>
  <dialog id="dialog_error">
    <p>Oops</p>
    <p>Somethinng went wrong</p>
  </dialog>
</div>

<script>
  var is_bot_connected_to_fedi = false;

  var fediUrlForm = document.getElementById("url-form");
  var fediUrlInput = document.getElementById("fedi_url_here");

  var setup_cta = document.getElementById("setup_cta");
  setup_cta.style.display = "none";

  var loading = document.getElementById("loading");
  var connect_link = document.getElementById("url_here");
  var code_input = document.getElementById("paste_code_here");
  var msg_input = document.getElementById("message_here");
  var img_url_input = document.getElementById("img_url_here");
  var instructions = document.getElementById("instructions");
  var more_instructions = document.getElementById("more_instructions");
  var success_and_post = document.getElementById("success_and_post");
  var iframe = document.getElementById("iframed_toot");
  code_input.value = "";
  msg_input.value = "";
  iframe.style = "display: none;";

  function get_has_credentials() {
    loading.hidden = false;
    fetch("/api/has_credentials")
      .then((response) => response.json())
      .then(
        ({ has_credentials }) => (is_bot_connected_to_fedi = has_credentials)
      )
      .then((_) => {
        if (is_bot_connected_to_fedi) {
          connect_link.hidden = true;
          code_input.hidden = true;
          instructions.hidden = true;
          more_instructions.hidden = true;

          success_and_post.hidden = false;
        } else {
          setup_cta.style.display = "grid";
        }
      })
      .catch((_) => {
        loading.hidden = true;
        setup_cta.style.display = "grid";
      })
      .finally((_) => (loading.hidden = true));
  }

  function setupBot(event) {
    event.preventDefault();

    try {
      loading.hidden = false;
      setup_cta.style.display = "none";

      new URL(fediUrlInput.value);

      if (
        !/^https:\/\/(?:[\w_-]+\.)+[\w]+(?:[\w\/_.-]*)?$/.test(
          fediUrlInput.value
        )
      ) {
        throw new Error("Not a HTTPS URL");
      }

      var url = new URL("/api/setup", window.location.origin);
      url.searchParams.append("fedi_url", fediUrlInput.value);

      fetch(url)
        .then((response) => response.json())
        .then(({ auth_url }) => {
          connect_link.hidden = false;
          code_input.hidden = false;
          instructions.hidden = false;
          more_instructions.hidden = false;

          connect_link.href = auth_url;
        })
        .then(() =>  showToast(`Setup started!`))
        .catch((e) => {
          alert(
            "Check the URL, possibly not a fedi instance or cannot run bot through it."
          );
          dialog_error.open = true;

          setup_cta.style.display = "grid";
          loading.hidden = true;
          throw e;
        })
        .finally((_) => (loading.hidden = true));
    } catch (error) {
      console.log("error");
      console.log(error);
      alert(error.message ?? error);
      setup_cta.style.display = "grid";
      loading.hidden = true;
      return;
    }
  }

  fediUrlForm.addEventListener("submit", (event) => {
    this.setupBot(event);
    event.preventDefault();
  });

  function connectAccount(event) {
    var pressedEnter = event.keyCode == 13;

    if (pressedEnter && code_input.value) {
      loading.hidden = false;

      connect_link.hidden = true;
      code_input.hidden = true;
      instructions.hidden = true;
      more_instructions.hidden = true;

      const code = code_input.value;
      var url = new URL("api/connect_user", window.location.origin);
      url.searchParams.append("user_code", code);

      fetch(url)
        .then((res) => res.json())
        .then(console.log)
        .then((_) => (success_and_post.hidden = false))
        .then((_) => (msg_input.value = ""))
        .then(() =>  showToast(`Account connected!`))
        .finally((_) => (loading.hidden = true));
    }
  }

  function post_message(event) {

    var fromButtonPress = event === null || event === undefined;
    var pressedEnter = event?.keyCode == 13 && !event?.shiftKey;
    var canPost = fromButtonPress || pressedEnter;

    if (canPost && msg_input.value && msg_input.value.trim()) {

      if (!confirm("Ready to post?")) {
        return;
      }
      loading.hidden = false;

      var url = new URL("api/post", window.location.origin);
      url.searchParams.append("text", msg_input.value);

      if (img_url_input.value) {
        url.searchParams.append("media_url", img_url_input.value);
      }

      fetch(url, { method: "POST" })
        .then((res) => {
          console.log(res);
          if (res.status !== 200) {
            throw new Error(res);
          }
          return res;
        })
        .then((_) => alert("success!"))
        .then((_) => (msg_input.value = ""))
        .then((_) => (img_url_input.value = ""))
        .then(() =>  showToast(`Toot posted!`))
        .catch((e) => {
          alert(`Failed to post 🤷‍♀️ \n Error: ${e.message || 'Unkown error'}`);
          console.log(e);
        })
        .finally((_) => (loading.hidden = true));
    }
  }

  function clearBotCredentials() {
    var bot_cred_url = new URL("api/bot/credentials", window.location.origin);
    var app_cred_url = new URL("api/app/credentials", window.location.origin);

    new Promise((resolve) => resolve())
      .then(
        confirm("Sure you want to clear the bot credentials?") &&
          fetch(app_cred_url, { method: "DELETE" })
            .then((res) => {
              console.log();
              if (res.status !== 204) {
                throw new Error(`Status ${res.status}`);
              }
            })
            .then((res) => res.json())
            .then(console.log)
            .then((_) => console.log("Cleared bot creds"))
            .then(
              confirm("Also clear Fedi App credentials?") &&
                fetch(app_cred_url, { method: "DELETE" })
                  .then((res) => res.json())
                  .then(console.log)
            )
      )
      .then((_) => window.location.reload())

      .catch((e) => {
        console.log("Something went wrong");
        console.log(e);
      });
  }

  function preview_toot() {
    msg_input;
    img_url_input;
    const params = new URLSearchParams({
      text: msg_input.value,
      mediaUrl: img_url_input.value,
    });

    var api_url = new URL("api/preview", window.location.origin);

    api_url.searchParams.append("text", msg_input.value);
    api_url.searchParams.append("mediaUrl", img_url_input.value);

    iframe.src = api_url;
    iframe.style = "display: block";
  }

  get_has_credentials();
</script>
